#配置日志
#logging:
#配置日志文件路径
#level:
#com.panacea-lab.panacare.dao: DEBUG

#采用相对路径方式将日志文件输出到【log\myspringboot.log】
#logging.file: log/myspringboot.log
#thymeleafy
# spring.thymeleaf.prefix:classpath:/templates/    此外无法解析的原因 /templates/ 后面多了一个空格
#spring.thymeleaf.suffix:.html

#spring.thymeleaf.cache=false
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.check-template-location=true
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html
#spring.thymeleaf.mode=HTML5

server.port=8181
server.tomcat.uri-encoding=utf-8
#log4j.rootCategory = DEBUG,stdout:
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

server.servlet.context-path=/panacare_server

#MySQL
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/test?characterEncoding=utf8
#spring.datasource.username=****
#spring.datasource.password=****

#Mybatis相关
#mybatis.config-location=classpath:mybatis-config.xml
##mybatis mapper文件的位置
#mybatis.mapper-locations=classpath*:mapper/**/*.xml
##扫描pojo类的位置,在此处指明扫描实体类的包，在mapper中就可以不用写pojo类的全路径名了
#mybatis.type-aliases-package=com.panacealab.panacare.entity




#datasource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#测试库
spring.datasource.url=jdbc:mysql://localhost/panacea-lab?userSSL=true&useUnicode=true&characterEncoding=UTF8&serverTimezone=GMT
spring.datasource.username=root
#本地mysql
spring.datasource.password=panacealab
#线上mysql
#spring.datasource.password=18H<-Wmh)mMwNC=
spring.datasource.tomcat.max-active=20
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=select 1
spring.datasource.tomcat.default-auto-commit=false
spring.datasource.tomcat.min-idle=15
spring.datasource.tomcat.initial-size=15


#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jackson.serialization.indent-output=true


banner.location=classpath:banner.txt